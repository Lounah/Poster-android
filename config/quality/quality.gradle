/**
 * Set up Ktlint to perform extensive code analysis.
 *
 * Gradle tasks added:
 * - ktlint
 * - ktlintFormat
 *
 * Some tasks above are added as dependencies of the check task so running check will
 * run all of them.
 */

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    ktlint "com.github.shyiko:ktlint:0.27.0"
    // additional 3rd party ruleset(s) can be specified here
    // just add them to the classpath (e.g. ktlint 'groupId:artifactId:version') and
    // ktlint will pick them up
}


def qualityConfigDir = "$project.rootDir/config/quality"
def reportsDir = "$project.buildDir/reports"

//NEW TASKS

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    args "--reporter=html,artifact=me.cassiano:ktlint-html-reporter:0.2.0,output=${reportsDir}/ktlint.html"
    args "--editorconfig=${qualityConfigDir}/ktlint/.editorconfig"
}


task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "-F", "src/**/*.kt"
}

//check.dependsOn 'checkstyle', 'findbugs', 'pmd'
check.dependsOn ktlint

